// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using AppKit;

namespace MyIdOnMac
{
	public partial class OpenDataFileViewController : NSViewController
	{
        public NSViewController Presentor;

        public string DataFile { get { return this.uxDataFile.StringValue; } }


        public OpenDataFileViewController (IntPtr handle) : base (handle)
		{
		}

        private void CloseDialog()
        {
            Presentor.DismissViewController(this);
        }

        partial void okDialog(NSObject sender)
        {
            if (System.IO.File.Exists(uxDataFile.StringValue))
            {
                var alert = new NSAlert()
                {
                    AlertStyle = NSAlertStyle.Warning,
                    InformativeText = $"Data file already exists: {uxDataFile.StringValue}",
                    MessageText = "Create new data file",
                };
                alert.RunModal();
                return;
            }
            RaiseDialogOk();
            CloseDialog();
        }



        public EventHandler DialogOk;
        internal void RaiseDialogOk()
        {
            if (this.DialogOk != null)
            {
                this.DialogOk(this, EventArgs.Empty);
            }
        }

        partial void cancelDialog(NSObject sender)
        {
            RaiseDialogCancelled();
            CloseDialog();
        }
        public EventHandler DialogCanceled;
        internal void RaiseDialogCancelled()
        {
            if (this.DialogCanceled != null)
                this.DialogCanceled(this, EventArgs.Empty);
        }


        partial void browseDataFile(NSObject sender)
        {
            var panel = new NSOpenPanel();

            panel.ReleasedWhenClosed = true;

            panel.Title = "Open data file";

            string p = uxDataFile.StringValue;
            if (string.IsNullOrWhiteSpace(p))
                p = System.IO.Path.Combine(KnownFolders.DataDir, "myid_secret.data");

            panel.NameFieldStringValue = System.IO.Path.GetFileName(p);
            panel.Directory = System.IO.Path.GetDirectoryName(p);

            panel.AllowedFileTypes = new string[] { ".data" };

            panel.BeginSheet(this.View.Window, ret =>
            {
                if (ret == 1 && !string.IsNullOrWhiteSpace(panel.Filename))
                {
                    uxDataFile.StringValue = panel.Filename;

                }
            });


        }
    }
}
