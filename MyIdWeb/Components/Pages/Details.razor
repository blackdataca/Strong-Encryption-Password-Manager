@page "/Details/{Id}"
@attribute [Authorize]
@rendermode InteractiveServer
@inject AuthenticationStateProvider authProvider
@inject ISecretData secretData
@inject IUserData userData
@inject NavigationManager navManager

<h1>Secret Details</h1>

<div>
    <div>
        @if (secret is not null)
        {
            <div>
                
                <div>
                    <div>@secret.Payload</div>
                </div>
                <div>
                    <button @onclick="ClosePage"></button>
                </div>
            </div>
        }
    </div>
</div>


@code {
    [Parameter]
    public string Id { get; set; }
    private UserModel loggedInUser;
    private SecretModel secret;

    protected override async Task OnInitializedAsync()
    {
        loggedInUser = await authProvider.GetUserFromAuth(userData);
        secret = await secretData.ReadSecret(Id, loggedInUser);
    }

    private void ClosePage()
    {
        navManager.NavigateTo("/main");
    }

    
}
